@model Models.Entity.Product
@{
    ViewBag.Title = "Create";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";
    List<Models.Entity.ProductCategory> listCategory = ViewBag.ProductCategory;
    
}

@section jsFooter{
    <script>
        $('#btnSelectImage').on('click', function (e) {
            e.preventDefault();
            var finder = new CKFinder();
            finder.selectActionFunction = function (url) {
                $('#txtImage').val(url);
            };
            finder.popup();
        })

        var editor = CKEDITOR.replace('txtcontent', {
            customConfig: '~/Assets/js/Plugin/ckeditor/config.js',
        });

        CKFinder.setupCKEditor(null, '/Assets/js/Plugin/ckfinder');

    </script>
}

<section class="wrapper">
    <div class="form-w3layouts">
        <div class="row">
            <div class="col-lg-12">
                <section class="panel">
                    <header class="panel-heading">
                        Create New Product
                        <span class="tools pull-right">
                        </span>
                    </header>
                    <div class="panel-body">
                        <div class="form">

                            @*<div class="form">*@

                            @*<form  method="get" action="" novalidate="novalidate">*@
                            @using (Html.BeginForm("Create", "ProductAdmin", FormMethod.Post, new { @class = "cmxform form-horizontal", @id = "signupForm" }))
                            {
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                <div class="form-group ">
                                    <label class="control-label col-lg-3">Product Name</label>
                                    <div class="col-lg-6">
                                        @*<input class="form-control " id="username" name="username" type="text">*@
                                        @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
                                        @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control", @type = "text" } })
                                    </div>
                                </div>
                                <div class="form-group ">
                                    <label for="MetaTitle" class="control-label col-lg-3">Meta Title</label>
                                    <div class="col-lg-6">
                                        @Html.ValidationMessageFor(model => model.metaTitle, "", new { @class = "text-danger" })
                                        @Html.EditorFor(model => model.metaTitle, new { htmlAttributes = new { @class = "form-control", @type = "text" } })
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="control-label col-lg-3">Category</label>
                                    <div class="col-lg-6">
                                        <select id="idCategory" name="idCategory" class="form-control m-bot15">
                                            @foreach (var item in listCategory)
                                            {
                                                <option value="@item.id">@item.name</option>
                                            }
                                        </select>
                                    </div>
                                </div>
                                <div class="form-group ">
                                    <label class="control-label col-lg-3">Quantity</label>
                                    <div class="col-lg-6">
                                        @Html.ValidationMessageFor(model => model.quantity, "", new { @class = "text-danger" })
                                        @Html.EditorFor(model => model.quantity, new { htmlAttributes = new { @class = "form-control", @type = "number" } })
                                    </div>
                                </div>
                                <div class="form-group ">
                                    <label class="control-label col-lg-3">Price</label>
                                    <div class="col-lg-6">
                                        @Html.ValidationMessageFor(model => model.price, "", new { @class = "text-danger" })
                                        @Html.EditorFor(model => model.price, new { htmlAttributes = new { @class = "form-control", @type = "number" } })
                                    </div>
                                </div>
                                <div class="form-group ">
                                    <label class="control-label col-lg-3">PromotionPrice</label>
                                    <div class="col-lg-6">
                                        @Html.ValidationMessageFor(model => model.promotionPrice, "", new { @class = "text-danger" })
                                        @Html.EditorFor(model => model.promotionPrice, new { htmlAttributes = new { @class = "form-control", @type = "number" } })
                                    </div>
                                </div>
                                <div class="form-group ">
                                    <label class="control-label col-lg-3">TopHot</label>
                                    <div class="col-lg-6">
                                        @Html.ValidationMessageFor(model => model.topHot, "", new { @class = "text-danger" })
                                        @Html.EditorFor(model => model.topHot, new { htmlAttributes = new { @class = "form-control", @type = "date" } })
                                    </div>
                                </div>
                                <div class="form-group ">
                                    <label class="control-label col-lg-3">Image</label>
                                    <div class="col-lg-6">
                                        @Html.EditorFor(model => model.image, new { htmlAttributes = new { @class = "form-control", @id = "txtImage" }, @id = "txtImage" })
                                        <a id="btnSelectImage" href="#">Chọn Ảnh</a>
                                        @Html.ValidationMessageFor(model => model.image, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group ">
                                    <label class="control-label col-lg-3">Description</label>
                                    <div class="col-lg-6">
                                        <textarea class="form-control " id="description" name="description" required=""></textarea>
                                    </div>
                                </div>
                                <div class="form-group ">
                                    <label class="control-label col-lg-3">Detail</label>
                                    <div class="col-lg-6">
                                        @Html.TextAreaFor(model => model.detail, new { htmlAttributes = new { @class = "form-control" }, id = "txtcontent" })
                                        @Html.ValidationMessageFor(model => model.detail, "", new { @class = "text-danger" })
                                    </div>
                                </div>


                                <div class="form-group">
                                    <label class="control-label col-lg-3">Status</label>
                                    <div class="col-lg-6">
                                        @Html.DropDownListFor(model => model.status, new[] { new SelectListItem { Text = "Active", Value = "true" }, new SelectListItem { Text = "Disable", Value = "false" } }, new { @class = "form-control m-bot15" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    <div class="col-lg-offset-3 col-lg-6">
                                        <button class="btn btn-primary" type="submit">Save</button>
                                        <button class="btn btn-default" type="button">Cancel</button>
                                    </div>
                                </div>
                            }

                        </div>
                    </div>
                </section>
            </div>
        </div>
    </div>
</section>

